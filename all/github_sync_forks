#!/bin/bash

PROJECT_DIR="$HOME/projects"
REPOS="i3 i3blocks rxvt-unicode rofi"
[ -n "$*" ] && REPOS="$*"

for REPO in $REPOS; do
	# Just skip if local repo is not found
	cd $PROJECT_DIR/$REPO > /dev/null 2>&1 || continue

	BRANCH="master"

	TITLE="$(echo -n "$REPO ($BRANCH)")"
	echo -n "$(printf "%-40s" "$TITLE" | tr ' ' '.'): "

	# Check if remove repo is set
	if [[ -z "$(git remote | grep upstream)" ]]; then
		echo "No upstream remote found"
		continue
	fi

	# Check if it's clean
	if [[ -n "$(git status -s)" ]]; then
		echo "Dirty"
		continue
	else
		if ! git checkout $BRANCH > /dev/null 2>&1; then
			echo "Failed to switch branch"
			continue
		fi
	fi

	git fetch -q upstream
	git merge -q upstream/$BRANCH

	if [ -n "$(git log HEAD..origin/$BRANCH --oneline)" ]; then
		echo "New content"
		git push
	else
		echo "Up to date"
	fi
done
