#!/bin/bash

start() {
	[ "$POMODORO_STAGE" = "S" ] && echo "Already started!" && return
	POMODORO_STAGE=S
	POMODORO_TIME=$(( $NOW + $POMODORO_GOING * 60 ))
	# set the at to the end of the current state (using sleep to get seconds precision)
	POMODORO_ATJOB=$(echo "sleep $(date -d @$POMODORO_TIME "+%S"); $0 stop" \
		             | at "$(date -d @$POMODORO_TIME "+%H:%M")" 2>&1 \
					 | grep "^job" \
					 | awk '{ print $2 }')
	save
}

stop() {
	[ "$POMODORO_STAGE" = "T" ] && echo "Already stopped!" && return
	POMODORO_STAGE=T
	let POMODORO_COUNT++
	[ "$(atq | cut -f1 | grep $POMODORO_ATJOB)" != "" ] && atrm $POMODORO_ATJOB
	save
}

save() {
	echo "$POMODORO_STAGE $POMODORO_TIME $POMODORO_COUNT $POMODORO_ATJOB" > $POMODORO_FILE
}

reset() {
	if [ -f $POMODORO_FILE ]; then
		ATJOB=$(cut -f4 -d' ' $POMODORO_FILE)
		[ "$(atq | cut -f1 | grep $ATJOB)" != "" ] && atrm $ATJOB
	fi
	echo "T $NOW 0 0" > $POMODORO_FILE
}

POMODORO_FILE=/tmp/pomodoro
POMODORO_GOING=25
POMODORO_SHORTBREAK=5
POMODORO_LONGBREAK=15

[ ! -f $POMODORO_FILE ] && reset
POMODORO_DATA=($(cat $POMODORO_FILE))
POMODORO_STAGE=${POMODORO_DATA[0]}
POMODORO_TIME=${POMODORO_DATA[1]}
POMODORO_COUNT=${POMODORO_DATA[2]}
POMODORO_ATJOB=${POMODORO_DATA[3]}

NOW=$(date -u +%s)

case $1 in
	start|stop|reset) $1;;
esac

DIFF=$(( $POMODORO_TIME - $NOW ))
[ "$POMODORO_STAGE" = "T" ] && DIFF=$(( $NOW - $POMODORO_TIME ))

#echo "$POMODORO_STAGE $(date -u -d @${DIFF} +%M:%S) ($POMODORO_COUNT)"
echo "$(date -u -d @${DIFF} +%M:%S)"

exit











function set_pomodoro() {
	POMODORO_STAGE=$1
	POMODORO_TIME=$(( $NOW + $2 * 60 ))

	# remove the old one job (if is there one)
	if [ "$(atq | cut -f1 | grep $POMODORO_ATJOB)" != "" ]; then
		atrm $POMODORO_ATJOB
	fi

	if [ $POMODORO_STAGE != T ]; then
		# set the at to the end of the current state (using sleep to get seconds precision)
		POMODORO_ATJOB=$(echo "sleep $(date -d @$POMODORO_TIME "+%S"); $0" | at "$(date -d @$POMODORO_TIME "+%H:%M %b %d")" 2>&1 | awk '{ print $2 }')
	fi

	TEXT=
	case $POMODORO_STAGE in
		S) TEXT="Start";;
		T) TEXT="Stop";;
		B) TEXT="Short break (${POMODORO_SHORTBREAK}min)";;
		L) TEXT="Long break (${POMODORO_LONGBREAK}min)";;
	esac

	if [ $POMODORO_STAGE != T ]; then
		TEXT="$TEXT, until $(date -d @${POMODORO_TIME} +%T)"
	fi

	notify-send -i appointment-soon -t 3000 Pomodoro "$TEXT"

	record
}

case $1 in
	start | s)       set_pomodoro S $POMODORO_GOING;;
	stop | t)        set_pomodoro T 0;;
	shortbreak | sb) set_pomodoro B $POMODORO_SHORTBREAK;;
	longbreak | lb)  set_pomodoro L $POMODORO_LONGBREAK;;
	set)             POMODORO_COUNT=$2; record;;
	reset)           POMODORO_COUNT=0; record;;
esac

echo -n "$POMODORO_STAGE "

DIFF=$(( $POMODORO_TIME - $NOW ))

# posprocessing. If time is over => change the state
if [ $DIFF -le 0 ]; then
	case $POMODORO_STAGE in
		S)
			let POMODORO_COUNT++

			if [ $(( POMODORO_COUNT % 4 )) = 0 ]; then
				set_pomodoro L $POMODORO_LONGBREAK
			else
				set_pomodoro B $POMODORO_SHORTBREAK
			fi
		;;
		B|L) set_pomodoro T 0;;
	esac
fi

# for the stop stage the time is progressive
if [ $POMODORO_STAGE = T ]; then
	DIFF=$(( $NOW - $POMODORO_TIME ))
fi

echo "$(date -u -d @${DIFF} +%T) ($POMODORO_COUNT)"
