#!/bin/bash

BIN_DIR="$HOME/.local/bin"
REPO_URL="http://github.com/pfsmorigo"
REPOS="scripts dotfiles"

check_dep() {
	if [ ! -x "$(command -v $1)" ]; then
		if [ -f /etc/redhat-release ]; then
			local COMMAND="dnf"
		elif [ -f /etc/debian_version ]; then
			local COMMAND="apt-get"
		else
			echo "No distro support!"
			exit 2
		fi

		sudo $COMMAND install $1
	fi
}

setup_initial_dirs() {
	echo "Setup inital dirs..."
	mkdir -p \
		$BIN_DIR \
		$HOME/.cache/mutt \
		$HOME/.config/git \
		$HOME/.local/share/newsbeuter \
		$HOME/media \
		$HOME/projects

	[ -d ~/Desktop   ] && mv ~/{D,d}esktop
	[ -d ~/Documents ] && mv ~/{D,d}ocuments
	[ -d ~/Downloads ] && mv ~/{D,d}ownloads
	[ -d ~/Public    ] && mv ~/{P,p}ublic
	[ -d ~/Templates ] && mv ~/{T,t}emplates
	[ -d ~/Music     ] && mv ~/Music    ~/media/music
	[ -d ~/Pictures  ] && mv ~/Pictures ~/media/pictures
	[ -d ~/Videos    ] && mv ~/Videos   ~/media/videos
}

setup_git() {
	echo "Setup git..."
	GIT_FILE=$HOME/.config/git/local
	if [ ! -f "$GIT_FILE" ]; then
		FULLNAME=$(getent passwd $LOGNAME | cut -d ":" -f 5)
		echo -n "Enter your full name [$FULLNAME]: "
		read NEWFULLNAME
		[ -n "$NEWFULLNAME" ] && FULLNAME=$NEWFULLNAME

		EMAIL="$LOGNAME@gmail.com"
		echo -n "Enter your email [$EMAIL]: "
		read NEWEMAIL
		[ -n "$NEWEMAIL" ] && EMAIL=$NEWEMAIL

		cat > $GIT_FILE <<-EOL
		[user]
		name = $FULLNAME
		email = $EMAIL

		[sendemail]
		bcc = $EMAIL
		EOL
	fi

	for REPO in $REPOS; do
		[ ! -d $HOME/$REPO ] && git clone --recursive $REPO_URL/$REPO
	done
}

setup_stow() {
	echo "Setup stow..."
	check_dep stow

	cd $HOME/scripts && stow -t $BIN_DIR basic smartprompt

	# If bashrc exists (and not a symlink) back up it
	[ -h $HOME/.bashrc ] || mv $HOME/.bashrc{,_original}

	cd $HOME/dotfiles && stow bash git screen vim
}

backup() {
	BACKUP_DIR=~/Private/Backup/Linux
	cd $BACKUP_DIR
	check_private
	echo -e "\nBackup\n-----------------------------------"
	rsync -avz --delete --progress ~/.local/share/shotwell/data/* $BACKUP_DIR/Shotwell
	git add .
	git commit -q -m "backup shotwell"
	rsync -avz --delete --progress ~/Dropbox/KeePassX/* $BACKUP_DIR/KeePassX
	git add .
	git commit -q -m "backup keepassx"
}

check_private() {
	if test -f ~/Private/README.txt; then
		echo -e "\nMounting Private\n-----------------------------------"
		ecryptfs-mount-private
		if test -f ~/Private/README.txt; then
			echo "Unable to open Private!"
			exit 1
		fi
	fi
}

setup_initial_dirs
setup_git
setup_stow

echo -e "\nDone.\n"
