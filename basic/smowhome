#!/bin/bash

BIN_DIR="$HOME/.local/bin"
REPO_URL="http://github.com/pfsmorigo"
REPOS="scripts dotfiles"

setup_core_packages() {
	local DISTRO=$(grep -T "^ID=" /etc/*-release | cut -d= -f2 | tr -d '"')
	local NUMBER=$(grep -T "^VERSION_ID=" /etc/*-release | cut -d= -f2 | tr -d '"')

	local PACKAGES="git screen stow telnet wget"
	local PACKAGES_DEBIAN="vim"
	local PACKAGES_REDHAT="vim-enhanced"
	local INSTALL_EXEC=
	local INSTALLED=

	case $DISTRO in
		rhel|fedora)
			INSTALL_EXEC=yum
			[ $DISTRO == 'fedora' ] && [ $NUMBER -gt 22 ] && INSTALL_EXEC=dnf
			INSTALLED="$(rpm -qa --qf '%{NAME} ')"
			PACKAGES="$PACKAGES $PACKAGES_REDHAT"
			;;

		ubuntu|debian)
			INSTALL_EXEC=apt
			INSTALLED="$(dpkg-query -f '${binary:Package} ' -W)"
			PACKAGES="$PACKAGES $PACKAGES_DEBIAN"
			;;

		*)
			echo "Unknown distro!"
			exit 1
			;;
	esac

	for PACKAGE in $PACKAGES; do
		[[ ! "$INSTALLED" == *"$PACKAGE"* ]] && TO_INSTALL+="$PACKAGE "
	done

	if [ -n "$TO_INSTALL" ]; then
		echo "Need to install: $TO_INSTALL"
		sudo $INSTALL_EXEC install $TO_INSTALL
	fi
}

setup_initial_dirs() {
	echo "Setup inital dirs..."
	mkdir -p \
		$BIN_DIR \
		$HOME/.cache/mutt \
		$HOME/.config/git \
		$HOME/.local/share/newsbeuter \
		$HOME/media \
		$HOME/projects

	[ -d ~/Desktop   ] && mv ~/{D,d}esktop
	[ -d ~/Documents ] && mv ~/{D,d}ocuments
	[ -d ~/Downloads ] && mv ~/{D,d}ownloads
	[ -d ~/Public    ] && mv ~/{P,p}ublic
	[ -d ~/Templates ] && mv ~/{T,t}emplates
	[ -d ~/Music     ] && mv ~/Music    ~/media/music
	[ -d ~/Pictures  ] && mv ~/Pictures ~/media/pictures
	[ -d ~/Videos    ] && mv ~/Videos   ~/media/videos
}

setup_git() {
	echo "Setup git..."
	GIT_FILE=$HOME/.config/git/local
	if [ ! -f "$GIT_FILE" ]; then
		FULLNAME=$(getent passwd $LOGNAME | cut -d ":" -f 5)
		echo -n "Enter your full name [$FULLNAME]: "
		read NEWFULLNAME
		[ -n "$NEWFULLNAME" ] && FULLNAME=$NEWFULLNAME

		EMAIL="$LOGNAME@gmail.com"
		echo -n "Enter your email [$EMAIL]: "
		read NEWEMAIL
		[ -n "$NEWEMAIL" ] && EMAIL=$NEWEMAIL

		cat > $GIT_FILE <<-EOL
		[user]
		name = $FULLNAME
		email = $EMAIL

		[sendemail]
		bcc = $EMAIL
		EOL
	fi

	for REPO in $REPOS; do
		[ ! -d $HOME/$REPO ] && git clone --recursive $REPO_URL/$REPO
	done
}

setup_stow() {
	echo "Setup stow..."

	cd $HOME/scripts && stow -t $BIN_DIR basic smartprompt

	# If bashrc exists (and not a symlink) back up it
	[ -h $HOME/.bashrc ] || mv $HOME/.bashrc{,X}
	[ -h $HOME/.bash_profile ] || mv $HOME/.bash_profile{,X}

	cd $HOME/dotfiles && stow bash git screen vim
}

backup() {
	BACKUP_DIR=~/Private/Backup/Linux
	cd $BACKUP_DIR
	check_private
	echo -e "\nBackup\n-----------------------------------"
	rsync -avz --delete --progress ~/.local/share/shotwell/data/* $BACKUP_DIR/Shotwell
	git add .
	git commit -q -m "backup shotwell"
	rsync -avz --delete --progress ~/Dropbox/KeePassX/* $BACKUP_DIR/KeePassX
	git add .
	git commit -q -m "backup keepassx"
}

check_private() {
	if test -f ~/Private/README.txt; then
		echo -e "\nMounting Private\n-----------------------------------"
		ecryptfs-mount-private
		if test -f ~/Private/README.txt; then
			echo "Unable to open Private!"
			exit 1
		fi
	fi
}

setup_core_packages
setup_initial_dirs
setup_git
setup_stow

echo -e "\nDone.\n"
