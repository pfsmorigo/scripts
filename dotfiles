#!/bin/bash

initial_dirs() {
	mkdir -p ~/Logs/screen
}

setup_git() {
	GIT_FILE=$HOME/.gitconfig-userinfo
	if [ -f "$GIT_FILE" ]; then
		read -p "$GIT_FILE already exists. Overwrite? (y/n) " RESP
		[ "$RESP" = "y" ] && mv .$GIT_FILE{,\_$(date +%F_%H-%M-%S)} || return
	fi

	FULLNAME=$(getent passwd $LOGNAME | cut -d ":" -f 5)
	echo -n "Enter your full name [$FULLNAME]: "
	read NEWFULLNAME
	[ -n "$NEWFULLNAME" ] && FULLNAME=$NEWFULLNAME

	EMAIL="$LOGNAME@gmail.com"
	echo -n "Enter your email [$EMAIL]: "
	read NEWEMAIL
	[ -n "$NEWEMAIL" ] && EMAIL=$NEWEMAIL

	echo "[user]" > $GIT_FILE
	echo "    name = $FULLNAME" >> $GIT_FILE
	echo "    email = $EMAIL" >> $GIT_FILE
}

[ -h $0 ] && EXEC=$(dirname $0)/$(readlink $0) || EXEC=$0
SCRIPTS_DIR="$(cd $(dirname $EXEC); pwd)"

# I always checkout the dotfiles repo in the same directory as the script one.
DOTFILES_DIR=${SCRIPTS_DIR/scripts/dotfiles}

if ! test -d $DOTFILES_DIR; then
	echo "There is no dotfiles directory. Cloning one..."
	git clone --recursive http://github.com/pfsmorigo/dotfiles.git $DOTFILES_DIR
else
	cd $DOTFILES_DIR
	git pull
fi

set -f
FIND_PARAM="-mindepth 1 -maxdepth 1	\
	-not -name README.md -not -name config -not -name .*"
DOTFILES_LIST="$(find $DOTFILES_DIR $FIND_PARAM | sed -e "s,$DOTFILES_DIR/,,g")"
DOTFILES_CONFIG_LIST="$(find $DOTFILES_DIR/config $FIND_PARAM | sed -e "s,$DOTFILES_DIR/,,g")"
set +f

case $1 in
	install|'')
		initial_dirs
		symlink2bin -p. $HOME         $DOTFILES_LIST
		symlink2bin     $HOME/.config $DOTFILES_CONFIG_LIST
		setup_git
		;;

	clean)
		rm -f ~/.rpmmacros.*
		;;

	*)
		echo wat?
		;;
esac
