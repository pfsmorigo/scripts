#!/bin/bash

BIN_DIR="$HOME/.local/bin"

base_dir() {
	EXEC=${BASH_SOURCE[0]}
	if [ -h $EXEC ]; then
		LINK="$(readlink $EXEC)"
		[ "${LINK:0:1}" = "/" ] && EXEC="$LINK" || EXEC="$(dirname $EXEC)/$LINK"
	fi
	echo "$(cd $(dirname $EXEC); pwd)"
}

initial_dirs() {
	mkdir -p $BIN_DIR
}

backup() {
	BACKUP_DIR=~/Private/Backup/Linux
	cd $BACKUP_DIR
	check_private
	echo -e "\nBackup\n-----------------------------------"
	rsync -avz --delete --progress ~/.local/share/shotwell/data/* $BACKUP_DIR/Shotwell
	git add .
	git commit -q -m "backup shotwell"
	rsync -avz --delete --progress ~/Dropbox/KeePassX/* $BACKUP_DIR/KeePassX
	git add .
	git commit -q -m "backup keepassx"
}

check_private() {
	if test -f ~/Private/README.txt; then
		echo -e "\nMounting Private\n-----------------------------------"
		ecryptfs-mount-private
		if test -f ~/Private/README.txt; then
			echo "Unable to open Private!"
			exit 1
		fi
	fi
}

if ! command -v realpath >/dev/null 2>&1; then
	echo "You need to install realpath package!"
	exit 1
fi

BASE_DIR="$(base_dir)"
SCRIPT_DIRS="$BASE_DIR $BASE_DIR/smartprompt $BASE_DIR/../scripts-local $HOME/ibm/bin"

echo $BASE_DIR

SYMLINK_EXEC=symlink2bin
if ! command -v $SYMLINK_EXEC >/dev/null 2>&1; then
	if [ -f $BASE_DIR/$SYMLINK_EXEC ]; then
		SYMLINK_EXEC="$BASE_DIR/$SYMLINK_EXEC"
	else
		echo "Symlink executable not found!"
		exit 1
	fi
fi

case $1 in

	backup)
		backup
		;;

	*)
		initial_dirs

		# Run dotfiles script
		$BASE_DIR/dotfiles

		for DIR in $SCRIPT_DIRS; do
			echo "Creating symlinks for $DIR directory..."
			echo "-------------------------------------------------------------"
			$SYMLINK_EXEC $BIN_DIR $(find $DIR -maxdepth 1 -mindepth 1 -executable -type f)
			echo ""
		done
		;;
esac

echo -e "\nDone.\n"
