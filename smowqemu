#!/bin/bash

ROOT=/dev/sda

identify() {
	FILE="$1"
	FILE_EXT="${FILE##*.}"

	if [ -f $FILE ]; then
		if [[ $FILE == vmlinu* ]]; then
			echo "-kernel $FILE -append root=$ROOT"
		elif [[ $FILE == initr* ]]; then
			echo "-initrd $FILE"
		else
			case $FILE_EXT in
				img|raw|qcow2) echo "-drive file=$FILE"	;;
				iso)           echo "-cdrom $FILE -boot order=d";;
				*)             echo "$FILE not identified!"; exit 1;;
			esac
		fi
	else
		echo "$FILE not found!"
		exit 1
	fi
}

OUTPUT="-nographic -serial stdio -nodefaults"

while getopts sdhpn:r:z OPT; do
	case $OPT in
		s) OUTPUT="-nographic -serial pty -monitor stdio";;
		d) OUTPUT="-vga std -vnc :33";;
		h) HUGEPAGES="-mem-path /dev/hugepages";;
		p) PLAN9="-fsdev local,id=shared_dir,path=$HOME,security_model=none -device virtio-9p-pci,fsdev=shared_dir,mount_tag=host_dir";;
		r) ROOT=$OPTARG ;;
		n) NETBOOT="-boot order=n -net nic -net user,tftp=$PWD,bootfile=${OPTARG}" ;
		z) DRY_RUN=1 ;;
	esac
done
shift $((OPTIND-1))
OPTIND=0

[ -f .smowqemu ] && ATTR=$(cat .smowqemu)
[ "$#" -eq 0 ] && [ -n "$ATTR" ] && $0 $ATTR && exit

[ -z "$(echo $1 | sed 's/[0-9]//g')" ] && VMID=$1 && shift

if [ -n "$VMID" ]; then
	MAC="4C:45:42:45:$(printf '%02d:%02d' $(grep -m1 $USER /etc/hosts | cut -d. -f3) $VMID)"
	NETWORK="-device spapr-vscsi -device spapr-vlan,netdev=net0,mac=$MAC -netdev bridge,br=br0,id=net0"
fi

QEMU_CMD="qemu-system-ppc64 \
	-enable-kvm -M pseries -smp 4,cores=2,threads=4 -m 4G \
	$OUTPUT $NETWORK $HUGEPAGES $PLAN9 $NETBOOT"

for ARG in $*; do
	QEMU_CMD+=" $(identify $ARG)"
done

QEMU_CMD="$(echo "$QEMU_CMD"| xargs)"
echo -e "\033k($VMID) $(basename $PWD)\033\\"
echo "$QEMU_CMD"
[ "$DRY_RUN" != "1" ] && $QEMU_CMD
